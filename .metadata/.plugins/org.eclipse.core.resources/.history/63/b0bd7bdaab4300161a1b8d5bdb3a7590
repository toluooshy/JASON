package pack;


import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.util.LinkedList;

import objects.Block;
import objects.Flag;
import objects.Player;
import objects.Restart;
import framework.GameObject;
import framework.ObjectId;

public class Handler 
{

	public LinkedList<GameObject> object = new LinkedList<GameObject>();

	private GameObject tempObject;
	
	private Camera cam;
	
	private BufferedImage level1 = null;
	private BufferedImage level2 = null;
	private BufferedImage level3 = null;
	private BufferedImage level4 = null;
	private BufferedImage level5 = null;
	private BufferedImage level6 = null;
	private BufferedImage level7 = null;
	private BufferedImage level8 = null;
	private BufferedImage level9 = null;
	private BufferedImage level10 = null;
	private BufferedImage clouds = null;
	
	public Handler(Camera cam){
		this.cam = cam;
		
		BufferedImageLoader loader = new BufferedImageLoader();
		level1 = loader.loadImage("/lvl1.png"); //loading the level
		level2 = loader.loadImage("/lvl2.png"); //loading the level
		level3 = loader.loadImage("/lvl3.png"); //loading the level
		level4 = loader.loadImage("/lvl4.png"); //loading the level
		level5 = loader.loadImage("/lvl5.png"); //loading the level
		level6 = loader.loadImage("/lvl6.png"); //loading the level
		level7 = loader.loadImage("/lvl7.png"); //loading the level
		level8 = loader.loadImage("/lvl8.png"); //loading the level
		level9 = loader.loadImage("/lvl9.png"); //loading the level
		level10 = loader.loadImage("/lvl10.png"); //loading the level
	}

	public void tick()
	{
	for(int i = 0; i < object.size(); i++)
	{
			tempObject = object.get(i);

			tempObject.tick(object);
		}
	}

	public void render(Graphics g){
	for(int i = 0; i < object.size(); i++)
	{
			tempObject = object.get(i);

			tempObject.render(g);
			
		}
	}
	
	public void LoadImageLevel(BufferedImage image){
		int w = image.getWidth();
		int h = image.getHeight();
		
		System.out.println("width, height: " + w + " " + h);
		
		
		for(int xx = 0; xx < h; xx++){
			for(int yy = 0; yy < w; yy++){
				int pixel = image.getRGB(xx, yy);
				int red = (pixel >> 16) & 0xff;
				int green = (pixel >> 8) & 0xff;
				int blue = (pixel) & 0xff;
				
				
				if(red == 255 && green == 255 & blue == 255) addObject(new Block(xx*32, yy*32, 0, ObjectId.Block));
				if(red == 127 && green == 127 & blue == 127) addObject(new Block(xx*32, yy*32, 1, ObjectId.Block));
				if(red == 0 && green == 0 & blue == 255) addObject(new Player(xx*32, yy*32, this, cam, ObjectId.Player));
				if(red == 0 && green == 255 & blue == 0) addObject(new Flag(xx*32, yy*32, ObjectId.Flag));
				if(red == 255 && green == 0 & blue == 0) addObject(new Restart(xx*32, yy*32, ObjectId.Restart));

				
				
				
				
			}
		}
	}
	
	

	public void switchLevel(){
		clearlevel();
		cam.setX(0);
		BufferedImageLoader loader = new BufferedImageLoader();
		
		switch(Game.LEVEL)
		{
		case 1:
			LoadImageLevel(level2);
			break;
	
		case 2:
			LoadImageLevel(level3);
			break;
			
		case 3:
			LoadImageLevel(level4);
			break;
			
		case 4:
			LoadImageLevel(level5);
			break;
			
		case 5:
			LoadImageLevel(level6);
			break;
	
		case 6:
			LoadImageLevel(level7);
			break;
			
		case 7:
			LoadImageLevel(level8);
			break;
			
		case 8:
			LoadImageLevel(level9);
			break;
		
		case 9:
			LoadImageLevel(level10);
			break;
		
		}
		
		Game.LEVEL++;
	}
	
	public void restartLevel(){
		clearlevel();
		cam.setX(0);
		
		switch(Game.LEVEL)
		{
		case 1:
			LoadImageLevel(level1);
			break;
			
		case 2:
			LoadImageLevel(level2);
			break;
	
		case 3:
			LoadImageLevel(level3);
			break;
			
		case 4:
			LoadImageLevel(level4);
			break;
			
		case 5:
			LoadImageLevel(level5);
			break;
			
		case 6:
			LoadImageLevel(level6);
			break;
	
		case 7:
			LoadImageLevel(level7);
			break;
			
		case 8:
			LoadImageLevel(level8);
			break;
			
		case 9:
			LoadImageLevel(level9);
			break;
		
		case 10:
			LoadImageLevel(level10);
			break;

		}
	}


	private void clearlevel(){
		this.object.clear();
	}

	public void addObject(GameObject object){
		this.object.add(object);
	}
	public void removeObject(GameObject object){
		this.object.remove(object);
	}
}
